(program (class_def class B { (insides s : Int <- (expr 10) ;) (insides g ( (parameter y : String) ) : Int { (expr (expr y) . concat ( (expr s) )) } ;) (insides f ( (parameter x : Int) ) : Int { (expr (expr x) + (expr 1)) } ;) } ;) (class_def class A inherits B { (insides a : Int ;) (insides b : B <- (expr new B) ;) (insides f ( (parameter x : Int) ) : Int { (expr (expr x) + (expr a)) } ;) } ;) (class_def class Main { (insides x : Int <- (expr 3) ;) (insides y : Int ;) (insides z : Int ;) (insides main ( ) : Object { (expr (expr x) + (expr z)) } ;) } ;))